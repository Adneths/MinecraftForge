--- a/net/minecraft/world/effect/MobEffect.java
+++ b/net/minecraft/world/effect/MobEffect.java
@@ -18,7 +_,7 @@
 import net.minecraft.world.entity.ai.attributes.AttributeModifier;
 import net.minecraft.world.entity.player.Player;
 
-public class MobEffect {
+public class MobEffect extends net.minecraftforge.registries.ForgeRegistryEntry<MobEffect> implements net.minecraftforge.common.extensions.IForgeMobEffect {
    private final Map<Attribute, AttributeModifier> f_19446_ = Maps.newHashMap();
    private final MobEffectCategory f_19447_;
    private final int f_19448_;
@@ -37,6 +_,7 @@
    protected MobEffect(MobEffectCategory p_19451_, int p_19452_) {
       this.f_19447_ = p_19451_;
       this.f_19448_ = p_19452_;
+      initClient();
    }
 
    public void m_6742_(LivingEntity p_19467_, int p_19468_) {
@@ -54,7 +_,7 @@
          ((Player)p_19467_).m_36399_(0.005F * (float)(p_19468_ + 1));
       } else if (this == MobEffects.f_19618_ && p_19467_ instanceof Player) {
          if (!p_19467_.f_19853_.f_46443_) {
-            ((Player)p_19467_).m_36324_().m_38707_(p_19468_ + 1, 1.0F);
+            ((Player)p_19467_).m_36324_().eat(p_19468_ + 1, 1.0F, p_19467_);
          }
       } else if ((this != MobEffects.f_19601_ || p_19467_.m_21222_()) && (this != MobEffects.f_19602_ || !p_19467_.m_21222_())) {
          if (this == MobEffects.f_19602_ && !p_19467_.m_21222_() || this == MobEffects.f_19601_ && p_19467_.m_21222_()) {
@@ -179,4 +_,29 @@
    public boolean m_19486_() {
       return this.f_19447_ == MobEffectCategory.BENEFICIAL;
    }
+
+   // FORGE START
+   private Object effectRenderer;
+
+   /*
+      DO NOT CALL, IT WILL DISAPPEAR IN THE FUTURE
+      Call RenderProperties.getEffectRenderer instead
+    */
+   public Object getEffectRendererInternal() {
+      return effectRenderer;
+   }
+
+   private void initClient() {
+      // Minecraft instance isn't available in datagen, so don't call initializeClient if in datagen
+      if (net.minecraftforge.fml.loading.FMLEnvironment.dist == net.minecraftforge.api.distmarker.Dist.CLIENT && !net.minecraftforge.fml.loading.FMLLoader.getLaunchHandler().isData()) {
+         initializeClient(properties -> {
+            this.effectRenderer = properties;
+         });
+      }
+   }
+
+   public void initializeClient(java.util.function.Consumer<net.minecraftforge.client.EffectRenderer> consumer) {
+   }
+   // END FORGE
+
 }
